name: Build GUI.for.Clash

on:
  push:
    tags:
      - "v*"

jobs:
  CreateRelease:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          body: |
            Auto-generated release from GitHub Actions.

  Build:
    needs: CreateRelease
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        build:
          - name: GUI.for.Clash-windows-amd64.zip
            os: ubuntu-latest
            GOOS: windows
            GOARCH: amd64
          - name: GUI.for.Clash-windows-arm64.zip
            os: ubuntu-latest
            GOOS: windows
            GOARCH: arm64
          - name: GUI.for.Clash-windows-386.zip
            os: ubuntu-latest
            GOOS: windows
            GOARCH: 386
          - name: GUI.for.Clash-darwin-amd64.zip
            os: macos-latest
            GOOS: darwin
            GOARCH: amd64
          - name: GUI.for.Clash-darwin-arm64.zip
            os: macos-latest
            GOOS: darwin
            GOARCH: arm64
    runs-on: ${{ matrix.build.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.4"

      - name: Set up Node.js
        uses: actions/setup-node@v3

      - name: Install dependencies
        run: |
          npm i -g pnpm
          cd frontend && pnpm install
          go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Build Frontend
        run: cd frontend && npm run build

      - name: Build for ${{ matrix.build.GOOS }}-${{ matrix.build.GOARCH }}
        env:
          GOOS: ${{ matrix.build.GOOS }}
          GOARCH: ${{ matrix.build.GOARCH }}
        run: $HOME/go/bin/wails build -m -s -trimpath -skipbindings -devtools -o GUI.for.Clash.exe

      - name: Create a compressed file for Darwin
        if: ${{ matrix.build.GOOS == 'darwin' }}
        run: |
          (
            cd ./build/bin
            # The compiled product name of macos is always "GUI.for.Clash.app"
            zip -q -r ${{ matrix.build.name }} GUI.for.Clash.app
          )

      - name: Create a compressed file for Windows
        if: ${{ matrix.build.GOOS == 'windows' }}
        run: |
          (
            cd ./build/bin
            zip ${{ matrix.build.name }} GUI.for.Clash.exe
          )

      - name: Upload ${{ matrix.build.GOOS }}-${{ matrix.build.GOARCH }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.CreateRelease.outputs.upload_url }}
          asset_path: ./build/bin/${{ matrix.build.name }}
          asset_name: ${{ matrix.build.name }}
          asset_content_type: application/x-msdownload
